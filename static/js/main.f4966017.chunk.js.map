{"version":3,"sources":["logo.svg","components/Showcase.js","App.js","reportWebVitals.js","index.js"],"names":["Showcase","props","useState","data","showcaseJson","setShowcaseJson","useEffect","fetch","then","response","json","className","map","el","index","onClick","window","location","href","url","src","process","imgName","style","backgroundColor","fill","name","desc","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAAe,I,2BCgCA,SAASA,EAASC,GAC7B,MAAwCC,mBAAS,CAACC,KAAM,KAAxD,mBAAOC,EAAP,KAAqBC,EAArB,KAmBA,OAfAC,qBAAU,WACNC,MAA+B,iBAC1BC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAL,GAGFE,EAAgBF,QAMzB,IAIC,8BACI,qBAAKQ,UAAU,qBAAf,SAEKP,EAAaD,KAAKS,KAAI,SAACC,EAAIC,GACxB,OACI,sBAAKH,UAAU,eAAqCI,QAAS,kBAAMC,OAAOC,SAASC,KAAhB,UAA0BL,EAAGM,MAAhG,UACI,qBAAKR,UAAU,YAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,qBAAKA,UAAU,kBAAf,SACI,qBAAKA,UAAU,WAAWS,IAAKC,GAAyBR,EAAGS,YAE/D,qBAAKX,UAAU,iBAAiBY,MAAO,CAAEC,gBAAgB,GAAD,OAAKX,EAAGY,OAAhE,SACI,sBAAKd,UAAU,yBAAf,UACI,oBAAIA,UAAU,YAAd,SAA2BE,EAAGa,OAC9B,mBAAGf,UAAU,YAAb,SAA0BE,EAAGc,iBAK7C,mBAAGhB,UAAU,gBAAb,SAA8BE,EAAGa,SAdFb,EAAGa,KAAOZ,UC/BtDc,MAvBf,WACE,OACE,sBAAKjB,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,4CAcF,cAAC,EAAD,QCVSkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f4966017.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import react, { useEffect, useState } from \"react\";\r\n// import data from '/public/projects.json';\r\n// import showcaseJson from '../services/Showcase.json';\r\nimport './Showcase.css'\r\n\r\n// var jsonData = {};\r\n// const getData = () => {\r\n//     fetch('projects.json').then(response => {\r\n//         console.log(response);\r\n//         // jsonData = response.json();\r\n//         return response.json();\r\n//     })\r\n// }\r\n\r\n\r\n// const Showcase = () => {\r\n//     useEffect(() => {\r\n//         getData()\r\n//     }, [])\r\n//     return (\r\n//         <div>\r\n//             <h1>Showcase</h1>\r\n//             <p>{jsonData.title}</p>\r\n//             <p>{getData}</p>\r\n//         </div>\r\n\r\n//     )\r\n// }\r\n\r\n// export default Showcase;\r\n// console.log(showcaseJson);\r\n\r\nexport default function Showcase(props) {\r\n    const [showcaseJson, setShowcaseJson] = useState({data: []});\r\n    // let showcaseJson = {\r\n    //     data: []\r\n    // };\r\n    useEffect(() => {\r\n        fetch(process.env.PUBLIC_URL + 'projects.json')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                // console.log(data);\r\n                // return data;\r\n                setShowcaseJson(data);\r\n            })\r\n        // {\r\n        //     console.log(response.json());\r\n        //     return response.json()\r\n        // })\r\n    }, [])\r\n    // console.log(showcaseJson);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"showcase-container\">\r\n                {/* <p>{showcaseJson.title}</p> */}\r\n                {showcaseJson.data.map((el, index) => {\r\n                    return (\r\n                        <div className=\"project-card\" key={el.name + index} onClick={() => window.location.href = `${el.url}`}>\r\n                            <div className=\"flip-card\">\r\n                                <div className=\"flip-card-inner\">\r\n                                    <div className=\"flip-card-front\">\r\n                                        <img className=\"flip-img\" src={process.env.PUBLIC_URL + el.imgName}></img>\r\n                                    </div>\r\n                                    <div className=\"flip-card-back\" style={{ backgroundColor: `${el.fill}` }} >\r\n                                        <div className=\"flip-card-back-content\">\r\n                                            <h1 className=\"flip-name\">{el.name}</h1>\r\n                                            <p className=\"flip-desc\">{el.desc}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <p className=\"project-title\">{el.name}</p>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Showcase from './components/Showcase';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Showcase</h1>\n        {/* <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a> */}\n      </header>\n      <Showcase />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}